{"version":3,"file":"static/js/836.2d42e3e7.chunk.js","mappings":"wPAEaA,EAAOC,EAAAA,EAAAA,KAAH,+DAKJC,EAAQD,EAAAA,EAAAA,MAAH,6FAMLE,EAAQF,EAAAA,EAAAA,MAAH,oI,mBCPLG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAiB9B,OACE,UAACT,EAAD,CAAMU,SAhBa,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBT,GACEU,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGjCX,GACFM,EAAKQ,OAER,EAG+BC,aAAa,MAA3C,WACE,UAACpB,EAAD,uBAEE,SAACC,EAAD,CAAOoB,KAAK,OAAOP,KAAK,aAE1B,UAACd,EAAD,oBAEE,SAACC,EAAD,CAAOoB,KAAK,QAAQP,KAAK,cAE3B,UAACd,EAAD,uBAEE,SAACC,EAAD,CAAOoB,KAAK,WAAWP,KAAK,iBAG9B,SAAC,IAAD,CACEQ,GAAG,MACHC,KAAK,KACLC,QAAQ,UACRC,OAAO,OACPC,MAAM,QACNC,YAAY,OACZN,KAAK,SAPP,wBAaL,EClDc,SAASO,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC3B,EAAD,MAGL,C,wJCZM,IAAM4B,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnB1B,EAAe,SAAAwB,GAAK,OAAIA,EAAMC,SAAS3B,SAAnB,EAEpB6B,EAAW,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EAEhBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAEpBC,EAAkB,SAAAP,GAAK,OAAIA,EAAMQ,OAAV,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 320px;\n  margin: 50px auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  margin-bottom: 12px;\n  margin-top: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { Form, Label, Input } from './RegisterForm.styled';\nimport { Button } from '@chakra-ui/react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    if (isLoading) {\n      form.reset();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Username\n        <Input type=\"text\" name=\"name\" />\n      </Label>\n      <Label>\n        Email\n        <Input type=\"email\" name=\"email\" />\n      </Label>\n      <Label>\n        Password\n        <Input type=\"password\" name=\"password\" />\n      </Label>\n      {/* <Button type=\"submit\">Register</Button> */}\n      <Button\n        ml=\"100\"\n        size=\"sm\"\n        variant=\"outline\"\n        height=\"35px\"\n        width=\"120px\"\n        colorScheme=\"blue\"\n        type=\"submit\"\n      >\n        Register\n      </Button>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getOperation = state => state.contacts.operation;\n\nexport const getStatusFilter = state => state.filters;\n"],"names":["Form","styled","Label","Input","RegisterForm","dispatch","useDispatch","isLoading","useSelector","getIsLoading","onSubmit","event","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","ml","size","variant","height","width","colorScheme","Register","Helmet","getContacts","state","contacts","items","getError","error","getOperation","operation","getStatusFilter","filters"],"sourceRoot":""}