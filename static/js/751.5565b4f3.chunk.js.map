{"version":3,"file":"static/js/751.5565b4f3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filters;\n","import styled from '@emotion/styled';\n\nexport const ContainerForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  max-height: 500px;\n  padding: 20px;\n  border: 1px solid #000;\n  border-radius: 3px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  padding: 0 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  margin-bottom: 12px;\n  margin-top: 5px;\n`;\n\nexport const Label = styled.label`\n  padding: 5px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background-color: #ffffff;\n  color: #000000;\n  padding: 5px 20px;\n  margin-left: 25px;\n  border: 1px solid #000000;\n  border-radius: 3px;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.25);\n  width: 130px;\n\n  &:active {\n    background-color: #1b8bcd;\n    color: #ffffff;\n    border: none;\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport {\n  ContainerForm,\n  Container,\n  Label,\n  Input,\n  Button,\n} from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contactItems = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = async () => {\n    if (name !== '' && number !== '') {\n      const isNameExists = contactItems.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n      if (isNameExists) {\n        alert(`${name} is already in contacts.`);\n        return;\n      } else {\n        try {\n          await dispatch(addContact({ name, number })).unwrap();\n          reset();\n        } catch (error) {\n          console.log('Error adding contact:', error);\n        }\n      }\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContainerForm>\n      <Container>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n      </Container>\n      <Container>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n      </Container>\n      <Button type=\"button\" onClick={handleAddContact}>\n        Add contact\n      </Button>\n    </ContainerForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 500px;\n  padding: 0 20px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background-color: #ffffff;\n  color: #000000;\n  margin-left: 10px;\n  padding: 5px 20px;\n  border: 1px solid #000000;\n  border-radius: 3px;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.25);\n  width: 100px;\n\n  &:active {\n    background-color: #1b8bcd;\n    color: #ffffff;\n    border: none;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getStatusFilter } from 'redux/contacts/selectors';\nimport { Container, Button } from './ContactList.styled';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getStatusFilter);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filteredContacts = contacts.filter(contact => {\n    const normalizedFilter = filter ? filter.toLowerCase() : '';\n\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return (\n    <Container>\n      {filteredContacts.map(({ name, number, id }) => (\n        <li key={id}>\n          {`${name}: ${number}`}\n          <Button onClick={() => handleDeleteContact(id)}>Delete</Button>\n        </li>\n      ))}\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  padding: 5px;\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  margin-top: 10px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/contacts/filtersSlice';\nimport { getStatusFilter } from 'redux/contacts/selectors';\nimport { Container, Label, Input } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getStatusFilter);\n\n  const changeFilter = event => {\n    dispatch(setStatusFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Container>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" value={filter} onChange={changeFilter} />\n      </Label>\n    </Container>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport { getIsLoading, getError } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getStatusFilter","filters","ContainerForm","styled","Container","Input","Label","Button","ContactForm","dispatch","useDispatch","contactItems","useSelector","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","handleAddContact","some","contact","toLowerCase","alert","addContact","unwrap","reset","console","log","type","pattern","title","required","onChange","onClick","ContactList","filter","filteredContacts","normalizedFilter","includes","map","id","contactId","deleteContact","Filter","setStatusFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}