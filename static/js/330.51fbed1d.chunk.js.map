{"version":3,"file":"static/js/330.51fbed1d.chunk.js","mappings":"0QAAaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAIpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMM,OAAV,E,kBCJvBC,EAAgBC,EAAAA,EAAAA,KAAH,oLAUbC,EAAYD,EAAAA,EAAAA,IAAH,8GAOTE,EAAQF,EAAAA,EAAAA,MAAH,oIAQLG,EAAQH,EAAAA,EAAAA,MAAH,6D,mBCnBH,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXV,GAAYW,EAAAA,EAAAA,IAAYZ,GACxBa,GAAeD,EAAAA,EAAAA,IAAYhB,GACjC,GAAwBkB,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,OAEL,EAEKC,EAAgB,mCAAG,iFACV,KAATR,GAA0B,KAAXE,EADI,qBAEAJ,EAAaW,MAChC,SAAAC,GAAO,OAAIA,EAAQV,KAAKW,gBAAkBX,EAAKW,aAAxC,IAHY,uBAMnBC,MAAM,GAAD,OAAIZ,EAAJ,6BANc,oDAUXL,GAASkB,EAAAA,EAAAA,IAAW,CAAEb,KAAAA,EAAME,OAAAA,KAAWY,SAV5B,QAWjBC,IAXiB,kDAajBC,QAAQC,IAAI,wBAAZ,MAbiB,0DAAH,qDAmBhBF,EAAQ,WACZd,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACd,EAAD,YACE,SAACE,EAAD,WACE,UAACE,EAAD,mBAEE,SAACD,EAAD,CACE0B,KAAK,OACLlB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRd,MAAOP,EACPsB,SAAUlB,UAIhB,SAACb,EAAD,WACE,UAACE,EAAD,qBAEE,SAACD,EAAD,CACE0B,KAAK,MACLlB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRd,MAAOL,EACPoB,SAAUlB,SAKdlB,GAaA,SAAC,IAAD,CACEqC,GAAG,IACHC,KAAK,KACLC,OAAO,OACPC,MAAM,QACNxC,WAAS,EACTyC,YAAY,aACZC,YAAY,OACZC,QAAQ,UARV,qBAZA,SAAC,IAAD,CACEN,GAAG,IACHC,KAAK,KACLK,QAAQ,UACRJ,OAAO,OACPC,MAAM,QACNE,YAAY,OACZE,QAAStB,EAPX,2BA2BP,CCjHM,IAAMjB,EAAYD,EAAAA,EAAAA,GAAH,4H,GAQAA,EAAAA,EAAAA,OAAH,0V,uHCAfyC,GAAOC,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtC,GAA0DI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAjD,EAAQC,UAAR,EAAmBC,MAAnB,EAA0BC,WAA1B,EAAsCC,QAAtC,aACMC,ECZR,SAAiBC,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACR,CDKsBI,CAAQ,CAC3BC,UAAWjB,EAAMO,MACjBW,eAAgBlB,EAAMQ,WACtBW,cAAenB,EAAMS,SAEvB,OAAuBW,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,GADwB,QAAC,gBAGvBpB,IAAAA,EACAK,WAAWgB,EAAAA,EAAAA,IAAG,cAAetB,EAAMM,YAChCI,GACAL,GANmB,IAOtBkB,MAAOrB,IAGZ,IACDJ,EAAK0B,YAAc,O,0CEvBfC,GAAMJ,EAAAA,EAAAA,GAAO,OACjBI,EAAID,YAAc,MAClB,IAAIE,GAAS3B,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQV,EAAwCS,EAAxCT,KAAR,EAAgDS,EAAlC2B,cAAAA,OAAd,SAAuCtB,GAAvC,OAAgDL,EAAhD,GACME,EAASyB,EAAgB,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAa,CAAC,EACtG,OAAuBV,EAAAA,EAAAA,KACrBK,GADwB,QAGtBxB,IAAAA,EACA8B,QAASxC,EACTgC,OAAO,kBACFrB,GADA,IAEH8B,WAAY,EACZC,SAAU,KAET5B,GAGR,ICbc,SAAS6B,IACtB,IAAMxE,GAAWC,EAAAA,EAAAA,MACXb,GAAWc,EAAAA,EAAAA,IAAYhB,GACvBuF,GAASvE,EAAAA,EAAAA,IAAYV,GACrBD,GAAYW,EAAAA,EAAAA,IAAYZ,GAMxBoF,EAAmBtF,EAASqF,QAAO,SAAA1D,GACvC,IAAM4D,EAAmBF,EAASA,EAAOzD,cAAgB,GAEzD,OAAOD,EAAQV,KAAKW,cAAc4D,SAASD,EAC5C,IAED,OACE,SAAC,EAAD,UACGD,EAAiBG,KAAI,gBAAGxE,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQuE,EAAjB,EAAiBA,GAAjB,OACpB,SAAC1C,EAAD,WACE,UAAC2B,EAAD,qBACM1D,EADN,aACeE,GAEXhB,GAaA,SAAC,IAAD,CACEqC,GAAG,IACHC,KAAK,KACLC,OAAO,OACPC,MAAM,QACNxC,WAAS,EACTyC,YAAY,aACZC,YAAY,OACZC,QAAQ,UARV,qBAZA,SAAC,IAAD,CACEN,GAAG,IACHC,KAAK,KACLK,QAAQ,UACRJ,OAAO,OACPC,MAAM,QACNE,YAAY,OACZE,QAAS,kBAzBK4C,EAyBqBD,OAxB/C9E,GAASgF,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CAyBL,EAPX,wBALKD,EADS,KAoC3B,CDxCDd,EAAOF,YAAc,UACRzB,EAAAA,EAAAA,IAAW,SAAiBC,EAAOC,GAC9C,IAAQV,EAAkBS,EAAlBT,KAASc,GAAjB,OAA0BL,EAA1B,GACA,OAAuBoB,EAAAA,EAAAA,KAAIM,GAAD,QAAWnC,KAAAA,EAAMU,IAAAA,EAAK0C,aAAc,UAAatC,GAC5E,IACMmB,YAAc,S,oBE5BRlE,EAAYD,EAAAA,EAAAA,IAAH,4GAOTG,EAAQH,EAAAA,EAAAA,MAAH,qFAMLE,EAAQF,EAAAA,EAAAA,MAAH,6GCTH,SAASuF,IACtB,IAAMlF,GAAWC,EAAAA,EAAAA,MACXwE,GAASvE,EAAAA,EAAAA,IAAYV,GAM3B,OACE,SAAC,EAAD,WACE,UAAC,EAAD,oCAEE,SAAC,EAAD,CAAO+B,KAAK,OAAOX,MAAO6D,EAAQ9C,SARnB,SAAAjB,GACnBV,GAASmF,EAAAA,EAAAA,GAAgBzE,EAAMC,cAAcC,OAC9C,QAUF,C,8CCbGhB,GAAYyC,EAAAA,EAAAA,IAAW,SAAoBC,EAAOC,GACpD,OAA8CG,EAAAA,EAAAA,IAAiBJ,GAAvDM,EAAR,EAAQA,UAAWqB,EAAnB,EAAmBA,cAAkBtB,GAArC,YACMH,GAASC,EAAAA,EAAAA,IAAe,YAAaH,GAC3C,OAAuBoB,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,QAAC,QAGvBpB,IAAAA,EACAK,WAAWgB,EAAAA,EAAAA,IAAG,mBAAoBhB,IAC/BD,GALmB,IAMtBkB,OAAO,kBACFrB,GACAyB,GAAiB,CAClBC,QAAS,OACTkB,cAAe,SACfjB,WAAY,aAKrB,IACDvE,EAAUkE,YAAc,Y,sECvBpBuB,IAAOhD,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAQ+C,EAAkEhD,EAAlEgD,UAAWzC,EAAuDP,EAAvDO,MAAO0C,EAAgDjD,EAAhDiD,QAASC,EAAuClD,EAAvCkD,KAAMC,EAAiCnD,EAAjCmD,MAAOC,EAA0BpD,EAA1BoD,KAAMC,EAAoBrD,EAApBqD,OAAWhD,GAAjE,OAA0EL,EAA1E,IACME,EAAS,CACb0B,QAAS,OACTkB,cAAeE,EACfnB,WAAYtB,EACZuB,eAAgBmB,EAChBK,SAAUJ,EACVK,UAAWJ,EACXlB,SAAUmB,EACVpB,WAAYqB,GAEd,OAAuBjC,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,KAAD,QAAepB,IAAAA,EAAKsB,MAAOrB,GAAWG,GACjE,IACD0C,GAAKvB,YAAc,O,eCjBfgC,GAAY,SAACxD,GAAD,OAA2BoB,EAAAA,EAAAA,KACzCC,EAAAA,EAAAA,KAD4C,QAAC,QAG3Cf,UAAW,sBACRN,GAJuC,IAK1CuB,OAAO,QACLK,QAAS,eACT6B,KAAM,WACNC,SAAU,GACP1D,EAAK,SATE,EAahBwD,GAAUhC,YAAc,YCdNX,OAAO8C,OAAO,CAC9B,OACA,KACA,KACA,KACA,KACA,QAEF,SAASC,GAAcC,EAAMC,GAC3B,OAAIC,MAAMC,QAAQH,GACTA,EAAKtB,KAAI,SAAC0B,GAAD,OAAmB,OAATA,EAAgB,KAAOH,EAAOG,EAAxC,KAEdC,EAAAA,EAAAA,IAASL,GACJhD,OAAOsD,KAAKN,GAAMO,QAAO,SAACC,EAAQtD,GAEvC,OADAsD,EAAOtD,GAAO+C,EAAOD,EAAK9C,IACnBsD,CACR,GAAE,CAAC,GAEM,MAARR,EACKC,EAAOD,GAET,IACR,CAyBD,IC/CIS,GAAW,kC,yHCgBXC,IAAQxE,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAC7B,IACEuE,EAWExE,EAXFwE,SACWC,EAUTzE,EAVFgD,UACAzC,EASEP,EATFO,MACA0C,EAQEjD,EARFiD,QAJF,EAYIjD,EAPF0E,QAAAA,OALF,MAKY,SALZ,EAMExB,EAMElD,EANFkD,KACAyB,EAKE3E,EALF2E,SACAC,EAIE5E,EAJF4E,QACAtE,EAGEN,EAHFM,UACAuE,EAEE7E,EAFF6E,mBACGxE,GAXL,OAYIL,EAZJ,IAaMgD,EAAYwB,EAAW,MAAyB,MAAjBC,EAAwBA,EAAgB,SACvEvE,GAAS4E,EAAAA,EAAAA,UACb,kBD/BJ,SAAwBC,GACtB,IAAQL,EAAuBK,EAAvBL,QAAS1B,EAAc+B,EAAd/B,UACXgC,EAAkB,CACtBC,OAAQ,CACNC,UAAWR,EACXS,UAAW,EACXC,aAAc,EACdC,YAAa,GAEfC,IAAK,CAAEJ,UAAW,EAAGC,UAAW,EAAGC,aAAc,EAAGC,YAAaX,GACjE,iBAAkB,CAChBQ,UAAW,EACXC,UAAW,EACXC,aAAcV,EACdW,YAAa,GAEf,cAAe,CACbH,UAAW,EACXC,UAAWT,EACXU,aAAc,EACdC,YAAa,IAGjB,gBACEvC,cAAeE,GACdsB,GAAWV,GACVZ,GACA,SAAC1E,GAAD,OAAW0G,EAAgB1G,EAA3B,IAGL,CCCSiH,CAAe,CAAEvC,UAAAA,EAAW0B,QAAAA,GAAlC,GACA,CAAC1B,EAAW0B,IAERc,GAAeV,EAAAA,EAAAA,UACnB,kBDJJ,SAA0BC,GACxB,IAAQL,EAAuBK,EAAvBL,QAAS1B,EAAc+B,EAAd/B,UACXyC,EAAgB,CACpBR,OAAQ,CACNS,GAAIhB,EACJiB,GAAI,EACJC,gBAAiB,EACjBC,kBAAmB,OAErB,iBAAkB,CAChBH,GAAIhB,EACJiB,GAAI,EACJC,gBAAiB,EACjBC,kBAAmB,OAErBP,IAAK,CACHK,GAAIjB,EACJgB,GAAI,EACJE,gBAAiB,MACjBC,kBAAmB,GAErB,cAAe,CACbF,GAAIjB,EACJgB,GAAI,EACJE,gBAAiB,MACjBC,kBAAmB,IAGvB,MAAO,CACL,IAAKjC,GACHZ,GACA,SAAC1E,GAAD,OAAWmH,EAAcnH,EAAzB,IAGL,CC9BSwH,CAAiB,CAAEpB,QAAAA,EAAS1B,UAAAA,GAAlC,GACA,CAAC0B,EAAS1B,IAEN+C,IAAenB,EACfoB,GAAqBnB,IAAuBkB,EAC5CE,GAASnB,EAAAA,EAAAA,UAAQ,WACrB,IAAMoB,EC1CV,SAA0BvB,GACxB,OAAOwB,EAAAA,SAAAA,QAAiBxB,GAAUxC,QAChC,SAACiE,GAAD,OAAWC,EAAAA,EAAAA,gBAAeD,EAA1B,GAEH,CDsCyBE,CAAiB3B,GACvC,OAAOqB,EAAoBE,EAAgBA,EAAc3D,KAAI,SAAC6D,EAAOG,GACnE,IAAMxF,EAA2B,qBAAdqF,EAAMrF,IAAsBqF,EAAMrF,IAAMwF,EACrDC,EAASD,EAAQ,IAAML,EAAcO,OAErCC,EAAS7B,GADsBzD,EAAAA,EAAAA,KAAIoC,GAAW,CAAEmB,SAAUyB,GAASrF,GACtBqF,EACnD,IAAKL,EACH,OAAOW,EACT,IAAMC,GAAgBC,EAAAA,EAAAA,cACpBhC,EACA,CACErD,MAAOiE,IAGLqB,EAAWL,EAAS,KAAOG,EACjC,OAAuBG,EAAAA,EAAAA,MAAKC,EAAAA,SAAU,CAAEpC,SAAU,CAChD+B,EACAG,IACG9F,EACN,GACF,GAAE,CACD6D,EACAY,EACAO,EACAC,EACAnB,EACAF,IAEIqC,GAAa1F,EAAAA,EAAAA,IAAG,eAAgBhB,GACtC,OAAuBc,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,QAAC,QAGvBpB,IAAAA,EACA2B,QAAS,OACTC,WAAYtB,EACZuB,eAAgBmB,EAChBH,cAAe5C,EAAO4C,cACtBQ,SAAUJ,EACV5C,UAAW0G,EACXzF,MAAOwE,EAAa,CAAC,GAAJ,WAAWzB,GAAWpE,EAAOoE,MAC3CjE,GAXmB,IAYtBsE,SAAUsB,IAGf,IACD1B,GAAM/C,YAAc,QElFpB,IAAIyF,IAASlH,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAAR,OAAgCmB,EAAAA,EAAAA,KAAImD,IAAD,QAAC,QAAShE,MAAO,UAAaP,GAA9B,IAAqCgD,UAAW,MAAO/C,IAAAA,IAA1F,ICGT,SAASiH,KACtB,IAAMxJ,GAAWC,EAAAA,EAAAA,MAQjB,OAJAwJ,EAAAA,EAAAA,YAAU,WACRzJ,GAAS0J,EAAAA,EAAAA,MACV,GAAE,CAAC1J,KAGF,SAAC,EAAD,CAAW2J,KAAK,MAAMC,QAAQ,IAA9B,UACE,SAACvE,GAAD,WACE,UAACkE,GAAD,CAAQvC,QAAQ,OAAhB,WACE,SAAC6C,EAAA,EAAD,WACE,gDAGF,UAAC9F,EAAD,CAAK+F,EAAE,QAAQC,EAAE,MAAjB,WACE,SAAC3H,EAAD,CAAM4H,SAAS,MAAMC,GAAG,IAAxB,wBAGA,SAAClK,EAAD,QAGF,UAACgE,EAAD,YACE,SAAC3B,EAAD,CAAM4H,SAAS,MAAMC,GAAG,IAAxB,uBAGA,SAAC/E,EAAD,KAEA,SAACV,EAAD,aAMX,CDtCD+E,GAAOzF,YAAc,Q","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/layout/dist/chunk-6CSUKJP7.mjs","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs","../node_modules/@chakra-ui/layout/dist/chunk-MPFPK3CX.mjs","../node_modules/@chakra-ui/layout/dist/chunk-AMDSPU3E.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-V4DIVZKN.mjs","../node_modules/@chakra-ui/layout/dist/chunk-O5CRURSQ.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/layout/dist/chunk-HUQHYERK.mjs","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getStatusFilter = state => state.filters;\n","import styled from '@emotion/styled';\n\nexport const ContainerForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  max-height: 500px;\n  padding: 20px;\n  border: 1px solid #000;\n  border-radius: 3px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  padding: 0 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  margin-bottom: 12px;\n  margin-top: 5px;\n`;\n\nexport const Label = styled.label`\n  padding: 5px;\n  font-size: 20px;\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContainerForm, Container, Label, Input } from './ContactForm.styled';\nimport { Button } from '@chakra-ui/react';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const contactItems = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = async () => {\n    if (name !== '' && number !== '') {\n      const isNameExists = contactItems.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n      if (isNameExists) {\n        alert(`${name} is already in contacts.`);\n        return;\n      } else {\n        try {\n          await dispatch(addContact({ name, number })).unwrap();\n          reset();\n        } catch (error) {\n          console.log('Error adding contact:', error);\n        }\n      }\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ContainerForm>\n      <Container>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n      </Container>\n      <Container>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n      </Container>\n\n      {!isLoading ? (\n        <Button\n          ml=\"6\"\n          size=\"sm\"\n          variant=\"outline\"\n          height=\"35px\"\n          width=\"120px\"\n          colorScheme=\"blue\"\n          onClick={handleAddContact}\n        >\n          Add contact\n        </Button>\n      ) : (\n        <Button\n          ml=\"6\"\n          size=\"sm\"\n          height=\"35px\"\n          width=\"120px\"\n          isLoading\n          loadingText=\"Submitting\"\n          colorScheme=\"teal\"\n          variant=\"outline\"\n        >\n          Submit\n        </Button>\n      )}\n    </ContainerForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 500px;\n  padding: 0 20px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  background-color: #ffffff;\n  color: #000000;\n  margin-left: 10px;\n  padding: 5px 20px;\n  border: 1px solid #000000;\n  border-radius: 3px;\n  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.25);\n  width: 100px;\n\n  &:active {\n    background-color: #1b8bcd;\n    color: #ffffff;\n    border: none;\n  }\n`;\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  getContacts,\n  getStatusFilter,\n  getIsLoading,\n} from 'redux/contacts/selectors';\nimport { Container } from './ContactList.styled';\nimport { Box, Text, Button } from '@chakra-ui/react';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getStatusFilter);\n  const isLoading = useSelector(getIsLoading);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filteredContacts = contacts.filter(contact => {\n    const normalizedFilter = filter ? filter.toLowerCase() : '';\n\n    return contact.name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return (\n    <Container>\n      {filteredContacts.map(({ name, number, id }) => (\n        <Text key={id}>\n          <Box>\n            {`${name}: ${number}`}\n            {/* <Button onClick={() => handleDeleteContact(id)}>Delete</Button> */}\n            {!isLoading ? (\n              <Button\n                ml=\"6\"\n                size=\"sm\"\n                variant=\"outline\"\n                height=\"35px\"\n                width=\"120px\"\n                colorScheme=\"blue\"\n                onClick={() => handleDeleteContact(id)}\n              >\n                Delete\n              </Button>\n            ) : (\n              <Button\n                ml=\"6\"\n                size=\"sm\"\n                height=\"35px\"\n                width=\"120px\"\n                isLoading\n                loadingText=\"Submitting\"\n                colorScheme=\"teal\"\n                variant=\"outline\"\n              >\n                Submit\n              </Button>\n            )}\n          </Box>\n        </Text>\n      ))}\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  padding: 5px;\n  font-size: 20px;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  margin-top: 10px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/contacts/filtersSlice';\nimport { getStatusFilter } from 'redux/contacts/selectors';\nimport { Container, Label, Input } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getStatusFilter);\n\n  const changeFilter = event => {\n    dispatch(setStatusFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Container>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" value={filter} onChange={changeFilter} />\n      </Label>\n    </Container>\n  );\n}\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n","// src/flex.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport {\n  Flex\n};\n","// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nvar selector = \"& > *:not(style) ~ *:not(style)\";\nfunction getStackStyles(options) {\n  const { spacing, direction } = options;\n  const directionStyles = {\n    column: {\n      marginTop: spacing,\n      marginEnd: 0,\n      marginBottom: 0,\n      marginStart: 0\n    },\n    row: { marginTop: 0, marginEnd: 0, marginBottom: 0, marginStart: spacing },\n    \"column-reverse\": {\n      marginTop: 0,\n      marginEnd: 0,\n      marginBottom: spacing,\n      marginStart: 0\n    },\n    \"row-reverse\": {\n      marginTop: 0,\n      marginEnd: spacing,\n      marginBottom: 0,\n      marginStart: 0\n    }\n  };\n  return {\n    flexDirection: direction,\n    [selector]: mapResponsive(\n      direction,\n      (value) => directionStyles[value]\n    )\n  };\n}\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  selector,\n  getStackStyles,\n  getDividerStyles\n};\n","import {\n  StackItem\n} from \"./chunk-AMDSPU3E.mjs\";\nimport {\n  getDividerStyles,\n  getStackStyles,\n  selector\n} from \"./chunk-V4DIVZKN.mjs\";\n\n// src/stack/stack.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const styles = useMemo(\n    () => getStackStyles({ direction, spacing }),\n    [direction, spacing]\n  );\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: styles.flexDirection,\n      flexWrap: wrap,\n      className: _className,\n      __css: hasDivider ? {} : { [selector]: styles[selector] },\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import {\n  Stack\n} from \"./chunk-O5CRURSQ.mjs\";\n\n// src/stack/h-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar HStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"row\", ref }));\nHStack.displayName = \"HStack\";\n\nexport {\n  HStack\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\n// import { getIsLoading, getError } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Helmet } from 'react-helmet';\nimport { Container, Flex, Box, HStack, Text } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(getIsLoading);\n  // const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container maxW=\"7xl\" padding=\"5\">\n      <Flex>\n        <HStack spacing=\"12px\">\n          <Helmet>\n            <title>Your contacts</title>\n          </Helmet>\n\n          <Box w=\"470px\" h=\"300\">\n            <Text fontSize=\"2xl\" as=\"b\">\n              Phonebook\n            </Text>\n            <ContactForm />\n          </Box>\n\n          <Box>\n            <Text fontSize=\"2xl\" as=\"b\">\n              Contacts\n            </Text>\n            <Filter />\n            {/* {isLoading && !error && <b>Request in progress...</b>} */}\n            <ContactList />\n          </Box>\n        </HStack>\n      </Flex>\n    </Container>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getStatusFilter","filters","ContainerForm","styled","Container","Input","Label","ContactForm","dispatch","useDispatch","useSelector","contactItems","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","handleAddContact","some","contact","toLowerCase","alert","addContact","unwrap","reset","console","log","type","pattern","title","required","onChange","ml","size","height","width","loadingText","colorScheme","variant","onClick","Text","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","align","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","jsx","chakra","cx","__css","displayName","Box","Square","centerContent","display","alignItems","justifyContent","boxSize","flexShrink","flexGrow","ContactList","filter","filteredContacts","normalizedFilter","includes","map","id","contactId","deleteContact","borderRadius","Filter","setStatusFilter","flexDirection","Flex","direction","justify","wrap","basis","grow","shrink","flexWrap","flexBasis","StackItem","flex","minWidth","freeze","mapResponsive","prop","mapper","Array","isArray","item","isObject","keys","reduce","result","selector","Stack","isInline","directionProp","spacing","children","divider","shouldWrapChildren","useMemo","options","directionStyles","column","marginTop","marginEnd","marginBottom","marginStart","row","getStackStyles","dividerStyle","dividerStyles","my","mx","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","Children","child","isValidElement","getValidChildren","index","isLast","length","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","HStack","Contacts","useEffect","fetchContacts","maxW","padding","Helmet","w","h","fontSize","as"],"sourceRoot":""}